# Development Configuration - SimplePro v3
# This configuration is for development use only and includes additional debugging capabilities

# Upstream servers for development
upstream api_backend_dev {
    server api-dev:4000;
    keepalive 32;
}

upstream web_backend_dev {
    server web-dev:3000;
    keepalive 32;
}

# Rate limiting for development (more permissive)
limit_req_zone $binary_remote_addr zone=api_limit_dev:10m rate=1000r/m;
limit_req_zone $binary_remote_addr zone=web_limit_dev:10m rate=2000r/m;

# Development server configuration
server {
    listen 80;
    server_name localhost dev.simplepro.local;

    # Security headers (development)
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Development-Mode "true";

    # Development-specific headers
    add_header X-Debug-Info "SimplePro-v3-Dev";
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";

    # Enhanced logging for development
    access_log /var/log/nginx/dev_access.log main;
    error_log /var/log/nginx/dev_error.log debug;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy - development\n";
        add_header Content-Type text/plain;
    }

    # Development tools endpoints
    location /dev-tools/ {
        access_log off;
        return 200 "Development tools available\n";
        add_header Content-Type text/plain;
    }

    # API routes with development settings
    location /api/ {
        limit_req zone=api_limit_dev burst=50 nodelay;

        # Development CORS
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Access-Control-Max-Age 86400;
            return 204;
        }

        proxy_pass http://api_backend_dev;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Development timeouts (longer for debugging)
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Web application routes
    location / {
        limit_req zone=web_limit_dev burst=100 nodelay;

        proxy_pass http://web_backend_dev;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Development static asset handling
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1h;  # Shorter cache for development
            add_header Cache-Control "public";
            add_header X-Cache-Status "STATIC-DEV";
        }
    }

    # Development admin tools (MinIO Console)
    location /minio-console/ {
        proxy_pass http://minio:9001/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Security - block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTPS configuration for development SSL testing
server {
    listen 443 ssl http2;
    server_name localhost dev.simplepro.local;

    # SSL Configuration (development certificates)
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Development security headers
    add_header Strict-Transport-Security "max-age=300" always;  # Shorter HSTS for dev
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Development-Mode "true" always;

    # Enhanced logging for development
    access_log /var/log/nginx/dev_ssl_access.log main;
    error_log /var/log/nginx/dev_ssl_error.log debug;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy - development SSL\n";
        add_header Content-Type text/plain;
    }

    # API routes (HTTPS)
    location /api/ {
        limit_req zone=api_limit_dev burst=50 nodelay;

        proxy_pass http://api_backend_dev;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;

        # CORS headers for HTTPS
        add_header Access-Control-Allow-Origin $http_origin;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
        add_header Access-Control-Allow-Credentials true;

        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Web application routes (HTTPS)
    location / {
        limit_req zone=web_limit_dev burst=100 nodelay;

        proxy_pass http://web_backend_dev;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;

        # Development static asset handling
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1h;
            add_header Cache-Control "public";
            add_header X-Cache-Status "STATIC-DEV-SSL";
        }
    }

    # Security - block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}