# Docker Services Environment Configuration
# Copy this file to .env.docker for local development
# Generate secure passwords for production deployments
# NEVER commit .env.docker to version control

# =============================================================================
# MONGODB CONFIGURATION
# =============================================================================
# MongoDB root username (required)
MONGODB_USERNAME=admin

# MongoDB root password (required)
# SECURITY: Generate a secure password for production
# Example: openssl rand -base64 32
MONGODB_PASSWORD=CHANGE_ME_SECURE_PASSWORD_HERE

# MongoDB database name (optional, defaults to simplepro)
MONGODB_DATABASE=simplepro

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis password (required)
# SECURITY: Generate a secure password for production
# Example: openssl rand -base64 32
REDIS_PASSWORD=CHANGE_ME_SECURE_PASSWORD_HERE

# =============================================================================
# MINIO (S3-COMPATIBLE STORAGE) CONFIGURATION
# =============================================================================
# MinIO root user (required)
MINIO_ROOT_USER=admin

# MinIO root password (required)
# SECURITY: Must be at least 8 characters long
# Generate: openssl rand -base64 32
MINIO_ROOT_PASSWORD=CHANGE_ME_SECURE_PASSWORD_HERE

# =============================================================================
# SECURITY RECOMMENDATIONS
# =============================================================================
# 1. Generate unique passwords for each service
# 2. Use passwords with at least 32 characters in production
# 3. Use a password manager or secrets management service
# 4. Rotate passwords regularly (every 90 days minimum)
# 5. Never use default passwords in production
# 6. Keep this file out of version control (it's in .gitignore)
# 7. Use different credentials for dev/staging/production environments

# =============================================================================
# QUICK SETUP FOR DEVELOPMENT (NOT FOR PRODUCTION)
# =============================================================================
# For development only, you can use these commands to generate secure passwords:
#
# On Linux/Mac:
#   export MONGODB_PASSWORD=$(openssl rand -base64 32)
#   export REDIS_PASSWORD=$(openssl rand -base64 32)
#   export MINIO_ROOT_PASSWORD=$(openssl rand -base64 32)
#
# On Windows PowerShell:
#   $env:MONGODB_PASSWORD = -join ((48..57) + (65..90) + (97..122) | Get-Random -Count 32 | ForEach-Object {[char]$_})
#   $env:REDIS_PASSWORD = -join ((48..57) + (65..90) + (97..122) | Get-Random -Count 32 | ForEach-Object {[char]$_})
#   $env:MINIO_ROOT_PASSWORD = -join ((48..57) + (65..90) + (97..122) | Get-Random -Count 32 | ForEach-Object {[char]$_})
