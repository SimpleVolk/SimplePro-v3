version: '3.9'

services:
  # MongoDB Primary Node
  mongodb-primary:
    image: mongo:7.0
    container_name: simplepro-mongodb-primary
    restart: unless-stopped
    command: mongod --replSet simplepro-rs --bind_ip_all --port 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-simplepro}
    ports:
      - '27017:27017'
    volumes:
      - mongodb_primary_data:/data/db
      - mongodb_primary_config:/data/configdb
      - ./scripts/mongodb/keyfile:/etc/mongodb-keyfile:ro
    networks:
      storage-network:
        ipv4_address: 172.22.0.10
    healthcheck:
      test: |
        mongosh --port 27017 --quiet --eval "
          try {
            rs.status();
            db.adminCommand('ping');
          } catch(e) {
            print('not ready');
            quit(1);
          }
        "
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # MongoDB Secondary Node 1
  mongodb-secondary1:
    image: mongo:7.0
    container_name: simplepro-mongodb-secondary1
    restart: unless-stopped
    command: mongod --replSet simplepro-rs --bind_ip_all --port 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-password123}
    ports:
      - '27018:27017'
    volumes:
      - mongodb_secondary1_data:/data/db
      - mongodb_secondary1_config:/data/configdb
      - ./scripts/mongodb/keyfile:/etc/mongodb-keyfile:ro
    networks:
      storage-network:
        ipv4_address: 172.22.0.11
    depends_on:
      - mongodb-primary
    healthcheck:
      test: |
        mongosh --port 27017 --quiet --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # MongoDB Secondary Node 2
  mongodb-secondary2:
    image: mongo:7.0
    container_name: simplepro-mongodb-secondary2
    restart: unless-stopped
    command: mongod --replSet simplepro-rs --bind_ip_all --port 27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-password123}
    ports:
      - '27019:27017'
    volumes:
      - mongodb_secondary2_data:/data/db
      - mongodb_secondary2_config:/data/configdb
      - ./scripts/mongodb/keyfile:/etc/mongodb-keyfile:ro
    networks:
      storage-network:
        ipv4_address: 172.22.0.12
    depends_on:
      - mongodb-primary
    healthcheck:
      test: |
        mongosh --port 27017 --quiet --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # MongoDB Exporter for Prometheus
  mongodb-exporter:
    image: percona/mongodb_exporter:0.40
    container_name: simplepro-mongodb-exporter
    restart: unless-stopped
    environment:
      MONGODB_URI: mongodb://${MONGODB_USERNAME:-admin}:${MONGODB_PASSWORD:-password123}@mongodb-primary:27017/?authSource=admin
    ports:
      - '9216:9216'
    networks:
      - storage-network
    depends_on:
      - mongodb-primary
    command:
      - '--mongodb.uri=mongodb://${MONGODB_USERNAME:-admin}:${MONGODB_PASSWORD:-password123}@mongodb-primary:27017/?authSource=admin'
      - '--mongodb.collstats-colls=simplepro.jobs,simplepro.customers,simplepro.users'
      - '--collect-all'
      - '--web.listen-address=:9216'

volumes:
  mongodb_primary_data:
    driver: local
  mongodb_primary_config:
    driver: local
  mongodb_secondary1_data:
    driver: local
  mongodb_secondary1_config:
    driver: local
  mongodb_secondary2_data:
    driver: local
  mongodb_secondary2_config:
    driver: local

networks:
  storage-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24
