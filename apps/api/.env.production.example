# ============================================
# SimplePro-v3 API - PRODUCTION ENVIRONMENT
# ============================================
#
# SECURITY WARNING: This is a template file with example values.
# NEVER commit actual production secrets to version control.
# All sensitive values must be set in your production environment.
#
# For secret generation, run: npm run generate:secrets
# For validation, run: npm run validate:env
#
# Last Updated: 2025-10-02
# ============================================

# ============================================
# APPLICATION CONFIGURATION
# ============================================

# Server Port (default: 3001)
# The port your API server will listen on
PORT=3001

# Node Environment (MUST be 'production')
NODE_ENV=production

# Application Name
APP_NAME=SimplePro-v3

# Application Version (for monitoring and logging)
APP_VERSION=3.0.0

# API Base URL (your production domain)
# Used for generating callback URLs, webhooks, etc.
API_BASE_URL=https://api.yourdomain.com

# Frontend URL (your production web app domain)
# Used for CORS, email links, and redirects
WEB_APP_URL=https://app.yourdomain.com

# ============================================
# DATABASE CONFIGURATION (MongoDB)
# ============================================
#
# SECURITY REQUIREMENTS:
# - Use MongoDB Atlas or managed MongoDB service
# - Username must NOT be 'admin', 'root', or 'test'
# - Password MUST be 32+ characters with special characters
# - Enable IP whitelisting and VPC peering if possible
# - Use TLS/SSL connection (add ?ssl=true to connection string)
# - Rotate credentials every 90 days
#
# Connection String Format:
# mongodb+srv://USERNAME:PASSWORD@cluster.mongodb.net/DATABASE?retryWrites=true&w=majority&ssl=true
# ============================================

# MongoDB Connection URI
# REQUIRED - No default value
# Example: mongodb+srv://prod_user:STRONG_PASSWORD_HERE@cluster.mongodb.net/simplepro_prod?retryWrites=true&w=majority&ssl=true
MONGODB_URI=

# Alternative: Separate MongoDB Configuration
# If not using MONGODB_URI, configure these individually:
MONGODB_HOST=
MONGODB_PORT=27017
MONGODB_DATABASE=simplepro_prod
MONGODB_USERNAME=
MONGODB_PASSWORD=

# MongoDB Connection Pool Settings
MONGODB_POOL_SIZE=50
MONGODB_MAX_IDLE_TIME_MS=60000
MONGODB_SERVER_SELECTION_TIMEOUT_MS=5000

# ============================================
# REDIS CACHE CONFIGURATION
# ============================================
#
# SECURITY REQUIREMENTS:
# - Enable AUTH with strong password (32+ characters)
# - Use Redis 6+ with ACL support
# - Configure maxmemory policy (allkeys-lru recommended)
# - Enable TLS if connecting over public network
# - Use Redis Sentinel or Cluster for high availability
#
# Connection String Format:
# redis://:PASSWORD@hostname:6379
# rediss://:PASSWORD@hostname:6380 (with TLS)
# ============================================

# Redis Host
REDIS_HOST=redis.yourdomain.com

# Redis Port (default: 6379, use 6380 for TLS)
REDIS_PORT=6379

# Redis Password (REQUIRED - minimum 32 characters)
# Generate with: openssl rand -base64 32
REDIS_PASSWORD=

# Redis Database Number (0-15)
REDIS_DB=0

# Redis Connection Timeout (milliseconds)
REDIS_CONNECT_TIMEOUT=10000

# Cache TTL Settings (seconds)
REDIS_TTL=300
REDIS_SHORT_TTL=60
REDIS_MEDIUM_TTL=300
REDIS_LONG_TTL=3600
REDIS_EXTRA_LONG_TTL=86400

# Redis Max Items in Cache
REDIS_MAX_ITEMS=100000

# Enable Redis TLS (recommended for production)
REDIS_TLS_ENABLED=true

# Redis Cluster Mode (set to 'true' if using Redis Cluster)
REDIS_CLUSTER_MODE=false

# ============================================
# JWT AUTHENTICATION SECRETS
# ============================================
#
# CRITICAL SECURITY REQUIREMENTS:
# - JWT_SECRET: MUST be 64+ characters, cryptographically random
# - JWT_REFRESH_SECRET: MUST be different from JWT_SECRET, 64+ characters
# - NEVER use example values like 'your-secret-key' in production
# - Rotate secrets every 90 days minimum
# - Store in secure secret manager (AWS Secrets Manager, HashiCorp Vault, etc.)
#
# Generate secure secrets with:
# openssl rand -base64 64 | tr -d '\n'
#
# FAILURE TO USE STRONG SECRETS WILL COMPROMISE YOUR ENTIRE SYSTEM
# ============================================

# JWT Access Token Secret (REQUIRED - minimum 64 characters)
JWT_SECRET=

# JWT Refresh Token Secret (REQUIRED - minimum 64 characters, MUST be different from JWT_SECRET)
JWT_REFRESH_SECRET=

# JWT Token Expiration Times
JWT_EXPIRES_IN=1h
JWT_REFRESH_EXPIRES_IN=7d

# JWT Issuer (your domain)
JWT_ISSUER=yourdomain.com

# JWT Audience (your API domain)
JWT_AUDIENCE=api.yourdomain.com

# ============================================
# CORS CONFIGURATION
# ============================================
#
# List your production frontend domains (comma-separated)
# Include ALL domains that need to access your API
# Do NOT use wildcards (*) in production
# Include protocol (https://) and port if non-standard
# ============================================

# Allowed Origins (comma-separated, no spaces)
# Example: https://app.yourdomain.com,https://www.yourdomain.com,https://mobile.yourdomain.com
ALLOWED_ORIGINS=https://app.yourdomain.com

# Allow Credentials (MUST be 'true' for cookie-based auth)
CORS_CREDENTIALS=true

# ============================================
# OBJECT STORAGE (MinIO/S3)
# ============================================
#
# For Production: Use AWS S3, DigitalOcean Spaces, or managed MinIO
#
# SECURITY REQUIREMENTS:
# - Use IAM roles or service accounts instead of access keys when possible
# - If using access keys, rotate every 90 days
# - Enable bucket versioning and lifecycle policies
# - Configure bucket policies with least privilege
# - Enable encryption at rest (AES-256 or KMS)
# - Use presigned URLs for temporary access
# - Enable access logging and monitoring
# ============================================

# Storage Provider (s3, minio, spaces)
STORAGE_PROVIDER=s3

# S3/MinIO Endpoint (use AWS regional endpoint for S3)
# AWS S3: s3.us-east-1.amazonaws.com
# DigitalOcean Spaces: nyc3.digitaloceanspaces.com
# Self-hosted MinIO: minio.yourdomain.com
STORAGE_ENDPOINT=s3.us-east-1.amazonaws.com

# Storage Port (443 for HTTPS, 9000 for MinIO)
STORAGE_PORT=443

# Storage Access Key (IAM User Access Key for S3)
STORAGE_ACCESS_KEY=

# Storage Secret Key (IAM User Secret Key for S3)
STORAGE_SECRET_KEY=

# Use SSL/TLS (MUST be 'true' in production)
STORAGE_USE_SSL=true

# Default Bucket Name
STORAGE_BUCKET_NAME=simplepro-prod-storage

# Storage Region (required for S3)
STORAGE_REGION=us-east-1

# Public URL for accessing files (if using CDN)
STORAGE_PUBLIC_URL=https://cdn.yourdomain.com

# ============================================
# EMAIL CONFIGURATION (SMTP)
# ============================================
#
# Recommended Providers:
# - SendGrid (reliable, good deliverability)
# - Amazon SES (cost-effective, requires verification)
# - Mailgun (developer-friendly)
# - Postmark (excellent deliverability)
#
# SECURITY REQUIREMENTS:
# - Use TLS/SSL (port 587 for STARTTLS, 465 for SSL)
# - Use app-specific passwords or API keys
# - Configure SPF, DKIM, and DMARC records
# - Monitor bounce rates and spam complaints
# ============================================

# SMTP Host
SMTP_HOST=smtp.sendgrid.net

# SMTP Port (587 for STARTTLS, 465 for SSL)
SMTP_PORT=587

# SMTP Secure (true for port 465, false for port 587)
SMTP_SECURE=false

# SMTP Username (often your API key or email)
SMTP_USER=

# SMTP Password (API key or app password)
SMTP_PASSWORD=

# From Email Address (must be verified domain)
SMTP_FROM_EMAIL=noreply@yourdomain.com

# From Name
SMTP_FROM_NAME=SimplePro

# Reply-To Email Address
SMTP_REPLY_TO=support@yourdomain.com

# Email Service Provider (sendgrid, ses, mailgun, postmark, other)
EMAIL_PROVIDER=sendgrid

# Enable Email Notifications (true/false)
EMAIL_NOTIFICATIONS_ENABLED=true

# ============================================
# SMS CONFIGURATION (Twilio)
# ============================================
#
# SECURITY REQUIREMENTS:
# - Store Twilio credentials in secret manager
# - Use Twilio Subaccounts for isolation
# - Enable two-factor authentication on Twilio account
# - Monitor usage and set spending limits
# - Verify phone numbers in production
# ============================================

# Twilio Account SID (starts with AC)
TWILIO_ACCOUNT_SID=

# Twilio Auth Token
TWILIO_AUTH_TOKEN=

# Twilio Phone Number (E.164 format: +15555551234)
TWILIO_PHONE_NUMBER=

# Twilio Verify Service SID (for 2FA, optional)
TWILIO_VERIFY_SERVICE_SID=

# Enable SMS Notifications (true/false)
SMS_NOTIFICATIONS_ENABLED=true

# ============================================
# PUSH NOTIFICATIONS (Firebase Cloud Messaging)
# ============================================
#
# SECURITY REQUIREMENTS:
# - Use service account JSON with minimal permissions
# - Store service account in secret manager
# - Enable App Check for mobile apps
# - Rotate service account keys annually
# - Monitor FCM quotas and usage
# ============================================

# Firebase Project ID
FIREBASE_PROJECT_ID=

# Firebase Private Key (multiline - use \n for newlines)
# Generate from Firebase Console > Project Settings > Service Accounts
FIREBASE_PRIVATE_KEY=

# Firebase Client Email (service account email)
FIREBASE_CLIENT_EMAIL=

# Firebase Database URL (optional)
FIREBASE_DATABASE_URL=

# Enable Push Notifications (true/false)
PUSH_NOTIFICATIONS_ENABLED=true

# ============================================
# API RATE LIMITING
# ============================================
#
# Production values should be tuned based on your infrastructure
# and expected traffic patterns. Start conservative and increase
# based on monitoring data.
# ============================================

# Global Rate Limit (requests per minute per IP)
RATE_LIMIT_GLOBAL=1000

# Authentication Endpoint Rate Limit (requests per minute per IP)
RATE_LIMIT_AUTH=10

# Login Rate Limit (attempts per minute per IP)
RATE_LIMIT_LOGIN=5

# API Rate Limit - Tier 1 (requests per second)
RATE_LIMIT_TIER1=20

# API Rate Limit - Tier 2 (requests per 10 seconds)
RATE_LIMIT_TIER2=100

# API Rate Limit - Tier 3 (requests per minute)
RATE_LIMIT_TIER3=500

# Rate Limit Window (milliseconds)
RATE_LIMIT_WINDOW_MS=60000

# Block Duration After Rate Limit (milliseconds)
RATE_LIMIT_BLOCK_DURATION_MS=900000

# ============================================
# LOGGING CONFIGURATION
# ============================================
#
# Production Recommendations:
# - Use centralized logging (CloudWatch, Datadog, ELK, etc.)
# - Set log level to 'warn' or 'error' to reduce noise
# - Enable structured JSON logging
# - Implement log retention policies
# - Monitor and alert on error rates
# ============================================

# Log Level (error, warn, info, debug, verbose)
LOG_LEVEL=warn

# Log Format (json, simple)
LOG_FORMAT=json

# Enable Console Logging (true/false)
LOG_CONSOLE_ENABLED=false

# Enable File Logging (true/false)
LOG_FILE_ENABLED=true

# Log File Path
LOG_FILE_PATH=/var/log/simplepro/api.log

# Log File Max Size (in bytes)
LOG_FILE_MAX_SIZE=10485760

# Log File Max Files (rotation)
LOG_FILE_MAX_FILES=10

# Enable CloudWatch Logs (AWS)
CLOUDWATCH_LOGS_ENABLED=false
CLOUDWATCH_LOG_GROUP=/simplepro/api/production
CLOUDWATCH_LOG_STREAM=api-server

# Enable Datadog Logs
DATADOG_LOGS_ENABLED=false
DATADOG_API_KEY=

# ============================================
# MONITORING & METRICS
# ============================================
#
# Configure monitoring for production observability
# Recommended: Prometheus + Grafana, Datadog, New Relic
# ============================================

# Enable Prometheus Metrics Endpoint
PROMETHEUS_ENABLED=true

# Prometheus Metrics Path
PROMETHEUS_METRICS_PATH=/metrics

# Prometheus Metrics Port (separate from API port)
PROMETHEUS_PORT=9090

# Enable Health Check Endpoint
HEALTH_CHECK_ENABLED=true

# Health Check Path
HEALTH_CHECK_PATH=/health

# Enable Application Performance Monitoring
APM_ENABLED=false

# APM Provider (newrelic, datadog, elastic)
APM_PROVIDER=datadog

# APM API Key
APM_API_KEY=

# APM Application Name
APM_APP_NAME=simplepro-api-prod

# ============================================
# SESSION CONFIGURATION
# ============================================

# Session Secret (64+ characters, cryptographically random)
# Generate with: openssl rand -base64 64 | tr -d '\n'
SESSION_SECRET=

# Session TTL (seconds) - 7 days default
SESSION_TTL=604800

# Session Cookie Name
SESSION_COOKIE_NAME=simplepro_session

# Session Cookie Secure (MUST be 'true' in production)
SESSION_COOKIE_SECURE=true

# Session Cookie HTTP Only (MUST be 'true' for security)
SESSION_COOKIE_HTTP_ONLY=true

# Session Cookie SameSite (strict, lax, none)
SESSION_COOKIE_SAME_SITE=lax

# Session Cookie Domain (your domain)
SESSION_COOKIE_DOMAIN=.yourdomain.com

# ============================================
# FILE UPLOAD CONFIGURATION
# ============================================

# Max File Size (bytes) - 50MB default
MAX_FILE_SIZE=52428800

# Allowed File Types (comma-separated MIME types)
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,image/webp,application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet

# Max Files Per Upload
MAX_FILES_PER_UPLOAD=10

# ============================================
# SECURITY CONFIGURATION
# ============================================

# Enable Helmet.js Security Headers (MUST be 'true')
HELMET_ENABLED=true

# Content Security Policy
CSP_ENABLED=true

# Enable HSTS (HTTP Strict Transport Security)
HSTS_ENABLED=true
HSTS_MAX_AGE=31536000

# Enable CSRF Protection
CSRF_ENABLED=true

# Bcrypt Salt Rounds (10-12 recommended for production)
BCRYPT_ROUNDS=12

# Password Requirements
PASSWORD_MIN_LENGTH=12
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBER=true
PASSWORD_REQUIRE_SPECIAL_CHAR=true

# Account Lockout After Failed Attempts
ACCOUNT_LOCKOUT_ENABLED=true
ACCOUNT_LOCKOUT_ATTEMPTS=5
ACCOUNT_LOCKOUT_DURATION=900

# ============================================
# FEATURE FLAGS
# ============================================

# Enable Swagger API Documentation (false in production recommended)
ENABLE_SWAGGER=false

# Enable GraphQL Playground (false in production recommended)
ENABLE_GRAPHQL_PLAYGROUND=false

# Enable Debug Mode (MUST be 'false' in production)
DEBUG_MODE=false

# Enable Data Seeding (MUST be 'false' in production)
SEED_DATA=false

# Enable WebSocket Real-time Features
WEBSOCKET_ENABLED=true

# Enable Crew Scheduling Auto-Assignment
CREW_AUTO_ASSIGNMENT_ENABLED=true

# Enable Automatic Job Status Updates
AUTO_JOB_STATUS_ENABLED=true

# Enable Notification Retries
NOTIFICATION_RETRY_ENABLED=true

# Maximum Notification Retry Attempts
NOTIFICATION_MAX_RETRIES=3

# ============================================
# WEBHOOK CONFIGURATION
# ============================================

# Webhook Secret for Signature Verification
WEBHOOK_SECRET=

# Webhook Timeout (milliseconds)
WEBHOOK_TIMEOUT=5000

# ============================================
# THIRD-PARTY INTEGRATIONS
# ============================================

# Google Maps API Key (for geocoding, distance calculations)
GOOGLE_MAPS_API_KEY=

# Stripe API Keys (for payment processing)
STRIPE_PUBLIC_KEY=
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=

# Analytics (Google Analytics, Mixpanel, etc.)
GOOGLE_ANALYTICS_ID=
MIXPANEL_TOKEN=

# ============================================
# BACKUP & DISASTER RECOVERY
# ============================================

# Enable Automated Backups
BACKUP_ENABLED=true

# Backup Schedule (cron format)
BACKUP_SCHEDULE=0 2 * * *

# Backup Retention Days
BACKUP_RETENTION_DAYS=30

# Backup Storage Location (S3 bucket or path)
BACKUP_STORAGE_LOCATION=

# ============================================
# TIMEZONE & LOCALIZATION
# ============================================

# Default Timezone (UTC recommended for servers)
TZ=UTC

# Default Locale
DEFAULT_LOCALE=en-US

# Supported Locales (comma-separated)
SUPPORTED_LOCALES=en-US,es-ES,fr-FR

# ============================================
# ADVANCED CONFIGURATION
# ============================================

# Node.js Memory Limit (MB)
NODE_OPTIONS=--max-old-space-size=2048

# Enable Cluster Mode (for multi-core scaling)
CLUSTER_MODE_ENABLED=false

# Number of Worker Processes (set to 0 for CPU count)
CLUSTER_WORKERS=0

# Graceful Shutdown Timeout (milliseconds)
SHUTDOWN_TIMEOUT=30000

# DNS Cache TTL (seconds)
DNS_CACHE_TTL=300

# ============================================
# END OF PRODUCTION CONFIGURATION
# ============================================
#
# DEPLOYMENT CHECKLIST:
# □ All secrets have been generated and are cryptographically random
# □ JWT_SECRET and JWT_REFRESH_SECRET are different and 64+ characters
# □ Database credentials are strong and unique
# □ CORS origins are explicitly set (no wildcards)
# □ SSL/TLS is enabled for all external connections
# □ Logging is configured and centralized
# □ Monitoring and alerting are set up
# □ Backups are configured and tested
# □ Rate limiting is properly configured
# □ All feature flags are set appropriately
# □ Environment variables have been validated
# □ Secret rotation schedule is documented
# □ Disaster recovery plan is in place
#
# VALIDATION:
# Run: npm run validate:env -- --env=production
#
# ============================================
