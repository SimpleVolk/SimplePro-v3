# MongoDB Performance Configuration
# Copy to .env and adjust values based on your infrastructure

# MongoDB Connection
MONGODB_URI=mongodb://username:password@localhost:27017/simplepro_v3

# Connection Pool Settings
MONGODB_MAX_POOL_SIZE=20          # Maximum connections in pool (default: 20)
MONGODB_MIN_POOL_SIZE=5           # Minimum connections in pool (default: 5)
MONGODB_MAX_IDLE_TIME=300000      # Max idle time for connections (5 minutes)

# Timeout Settings
MONGODB_SERVER_SELECTION_TIMEOUT=5000   # Server selection timeout (5 seconds)
MONGODB_SOCKET_TIMEOUT=45000            # Socket timeout (45 seconds)
MONGODB_CONNECT_TIMEOUT=10000           # Connection timeout (10 seconds)
MONGODB_WRITE_TIMEOUT=10000             # Write operation timeout (10 seconds)

# Read/Write Preferences
MONGODB_READ_PREFERENCE=primary          # Options: primary, secondary, primaryPreferred, secondaryPreferred
MONGODB_AUTH_SOURCE=admin                # Authentication database

# SSL/TLS Settings
MONGODB_SSL=false                        # Enable SSL/TLS
MONGODB_SSL_VALIDATE=true               # Validate SSL certificates

# Redis Configuration for Caching
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=                          # Leave empty if no password
REDIS_DB=0                              # Database number
REDIS_TTL_DEFAULT=3600                  # Default TTL in seconds (1 hour)
REDIS_MAX_MEMORY_POLICY=allkeys-lru     # Memory eviction policy

# Application Performance Settings
NODE_ENV=production                      # Environment (development/production)
LOG_LEVEL=info                          # Logging level (debug/info/warn/error)

# Analytics Configuration
ANALYTICS_BATCH_SIZE=100                 # Batch size for analytics events
ANALYTICS_FLUSH_INTERVAL=5000           # Flush interval in milliseconds
ANALYTICS_RETENTION_DAYS=730            # Keep analytics for 2 years

# Query Performance Monitoring
ENABLE_QUERY_LOGGING=true               # Enable slow query logging
SLOW_QUERY_THRESHOLD=100                # Log queries slower than 100ms
MAX_QUERY_METRICS_HISTORY=1000          # Keep last N query metrics

# Connection Health Monitoring
HEALTH_CHECK_INTERVAL=30000             # Health check interval (30 seconds)
CONNECTION_RETRY_ATTEMPTS=3             # Number of retry attempts
CONNECTION_RETRY_DELAY=5000             # Delay between retries (5 seconds)

# Security Settings
JWT_SECRET=your-super-secure-jwt-secret-key-here
JWT_EXPIRES_IN=1h                       # JWT expiration time
REFRESH_TOKEN_EXPIRES_IN=7d             # Refresh token expiration
BCRYPT_ROUNDS=12                        # Password hashing rounds

# Rate Limiting
RATE_LIMIT_WINDOW=900000                # Rate limit window (15 minutes)
RATE_LIMIT_MAX_REQUESTS=100             # Max requests per window
RATE_LIMIT_SKIP_SUCCESS=true            # Skip successful requests

# File Upload Limits
MAX_FILE_SIZE=10485760                  # Max file size (10MB)
MAX_FILES_PER_REQUEST=10                # Max files per request

# Email Configuration (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@example.com
SMTP_PASSWORD=your-app-password

# Monitoring and Observability
ENABLE_METRICS=true                     # Enable application metrics
METRICS_PORT=9090                       # Prometheus metrics port
ENABLE_TRACING=false                    # Enable distributed tracing
JAEGER_ENDPOINT=http://localhost:14268/api/traces

# Production Optimizations
COMPRESSION_ENABLED=true                # Enable response compression
COMPRESSION_THRESHOLD=1024              # Compress responses larger than 1KB
TRUST_PROXY=true                        # Trust proxy headers
CORS_ORIGIN=https://yourdomain.com      # CORS origin for production

# Database Backup Configuration
BACKUP_ENABLED=true                     # Enable automatic backups
BACKUP_SCHEDULE=0 2 * * *               # Daily at 2 AM (cron format)
BACKUP_RETENTION_DAYS=30                # Keep backups for 30 days
BACKUP_S3_BUCKET=your-backup-bucket     # S3 bucket for backups

# Performance Tuning Recommendations:
#
# 1. MongoDB Indexes:
#    - Monitor index usage with analyzeIndexUsage()
#    - Drop unused indexes to save space and write performance
#    - Use compound indexes for common query patterns
#    - Consider partial indexes for sparse data
#
# 2. Connection Pool Sizing:
#    - Start with 20 max connections for most workloads
#    - Increase if you see connection timeouts
#    - Monitor connection usage in production
#
# 3. Caching Strategy:
#    - Cache frequently accessed data (users, roles, pricing rules)
#    - Use appropriate TTL values based on data freshness requirements
#    - Monitor cache hit rates and adjust accordingly
#
# 4. Query Optimization:
#    - Use aggregation pipelines instead of multiple queries
#    - Implement proper pagination for large result sets
#    - Select only required fields to reduce network overhead
#
# 5. Memory Management:
#    - Monitor heap usage and garbage collection
#    - Use streaming for large data operations
#    - Implement proper error handling and connection cleanup